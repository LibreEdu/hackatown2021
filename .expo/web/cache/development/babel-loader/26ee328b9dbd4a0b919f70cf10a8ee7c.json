{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projets\\\\Hackaton_Poly_2021\\\\hackatown2021\\\\hackatown2021\\\\components\\\\TextInput.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput as Input } from 'react-native-paper';\nimport { Theme } from \"../styles/Theme\";\n\nvar TextInput = function TextInput(_ref) {\n  var errorText = _ref.errorText,\n      description = _ref.description,\n      props = _objectWithoutProperties(_ref, [\"errorText\", \"description\"]);\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, _extends({\n    style: styles.input,\n    selectionColor: Theme.colors.primary,\n    underlineColor: \"transparent\",\n    mode: \"outlined\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  })), description && !errorText ? React.createElement(Text, {\n    style: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, description) : null, errorText ? React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 22\n    }\n  }, errorText) : null);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginVertical: 12\n  },\n  input: {\n    backgroundColor: theme.colors.surface\n  },\n  description: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n    paddingTop: 8\n  },\n  error: {\n    fontSize: 13,\n    color: theme.colors.error,\n    paddingTop: 8\n  }\n});\nexport default TextInput;","map":{"version":3,"sources":["C:/Projets/Hackaton_Poly_2021/hackatown2021/hackatown2021/components/TextInput.js"],"names":["React","TextInput","Input","Theme","errorText","description","props","styles","container","input","colors","primary","error","StyleSheet","create","width","marginVertical","backgroundColor","theme","surface","fontSize","color","secondary","paddingTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,oBAAnC;AACA,SAASC,KAAT;;AAEA,IAAMF,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGG,SAAH,QAAGA,SAAH;AAAA,MAAcC,WAAd,QAAcA,WAAd;AAAA,MAA8BC,KAA9B;;AAAA,SACd,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAED,MAAM,CAACE,KADlB;AAEI,IAAA,cAAc,EAAEN,KAAK,CAACO,MAAN,CAAaC,OAFjC;AAGI,IAAA,cAAc,EAAC,aAHnB;AAII,IAAA,IAAI,EAAC;AAJT,KAKQL,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAQKD,WAAW,IAAI,CAACD,SAAhB,GACG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACF,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCA,WAAlC,CADH,GAEG,IAVR,EAWKD,SAAS,GAAG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BR,SAA5B,CAAH,GAAmD,IAXjE,CADc;AAAA,CAAlB;;AAgBA,IAAMG,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,cAAc,EAAE;AAFT,GADkB;AAK7BP,EAAAA,KAAK,EAAE;AACHQ,IAAAA,eAAe,EAAEC,KAAK,CAACR,MAAN,CAAaS;AAD3B,GALsB;AAQ7Bd,EAAAA,WAAW,EAAE;AACTe,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,KAAK,EAAEH,KAAK,CAACR,MAAN,CAAaY,SAFX;AAGTC,IAAAA,UAAU,EAAE;AAHH,GARgB;AAa7BX,EAAAA,KAAK,EAAE;AACHQ,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,KAAK,EAAEH,KAAK,CAACR,MAAN,CAAaE,KAFjB;AAGHW,IAAAA,UAAU,EAAE;AAHT;AAbsB,CAAlB,CAAf;AAoBA,eAAetB,SAAf","sourcesContent":["import React from 'react'\r\nimport { View, StyleSheet, Text } from 'react-native'\r\nimport { TextInput as Input } from 'react-native-paper'\r\nimport { Theme } from '../styles/Theme'\r\n\r\nconst TextInput = ({ errorText, description, ...props }) => (\r\n    <View style={styles.container}>\r\n        <Input\r\n            style={styles.input}\r\n            selectionColor={Theme.colors.primary}\r\n            underlineColor=\"transparent\"\r\n            mode=\"outlined\"\r\n            {...props}\r\n        />\r\n        {description && !errorText ? (\r\n            <Text style={styles.description}>{description}</Text>\r\n        ) : null}\r\n        {errorText ? <Text style={styles.error}>{errorText}</Text> : null}\r\n    </View>\r\n)\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: '100%',\r\n        marginVertical: 12,\r\n    },\r\n    input: {\r\n        backgroundColor: theme.colors.surface,\r\n    },\r\n    description: {\r\n        fontSize: 13,\r\n        color: theme.colors.secondary,\r\n        paddingTop: 8,\r\n    },\r\n    error: {\r\n        fontSize: 13,\r\n        color: theme.colors.error,\r\n        paddingTop: 8,\r\n    },\r\n})\r\n\r\nexport default TextInput"]},"metadata":{},"sourceType":"module"}