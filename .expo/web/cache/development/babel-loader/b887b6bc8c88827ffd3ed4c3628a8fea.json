{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projets\\\\Hackaton_Poly_2021\\\\hackatown2021\\\\hackatown2021\\\\scenes\\\\LoginView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { Theme } from \"../styles/Theme\";\nimport { emailValidator } from \"../utils/emailValidator\";\nimport { passwordValidator } from \"../utils/passwordValidator\";\n\nvar LoginView = function LoginView(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Dashboard'\n      }]\n    });\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Welcome back.\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ForgotPasswordScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onLoginPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('RegisterScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Sign up\"))));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: Theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: Theme.colors.primary\n  }\n});\nexport default LoginView;","map":{"version":3,"sources":["C:/Projets/Hackaton_Poly_2021/hackatown2021/hackatown2021/scenes/LoginView.js"],"names":["React","useState","Text","Background","Button","TextInput","BackButton","Theme","emailValidator","passwordValidator","LoginView","navigation","value","error","email","setEmail","password","setPassword","onLoginPressed","emailError","passwordError","reset","index","routes","name","goBack","text","styles","forgotPassword","navigate","forgot","row","replace","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../components/Background'\r\nimport Button from '../components/Button'\r\nimport TextInput from '../components/TextInput'\r\nimport BackButton from '../components/BackButton'\r\nimport { Theme } from '../styles/Theme'\r\nimport { emailValidator } from '../utils/emailValidator'\r\nimport { passwordValidator } from '../utils/passwordValidator'\r\n\r\nconst LoginView = ({ navigation }) => {\r\n    const [email, setEmail] = useState({ value: '', error: '' })\r\n    const [password, setPassword] = useState({ value: '', error: '' })\r\n\r\n    const onLoginPressed = () => {\r\n        const emailError = emailValidator(email.value)\r\n        const passwordError = passwordValidator(password.value)\r\n        if (emailError || passwordError) {\r\n            setEmail({ ...email, error: emailError })\r\n            setPassword({ ...password, error: passwordError })\r\n            return\r\n        }\r\n        navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: 'Dashboard' }],\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Background>\r\n            <BackButton goBack={navigation.goBack} />\r\n            <Logo />\r\n            <Header>Welcome back.</Header>\r\n            <TextInput\r\n                label=\"Email\"\r\n                returnKeyType=\"next\"\r\n                value={email.value}\r\n                onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n                error={!!email.error}\r\n                errorText={email.error}\r\n                autoCapitalize=\"none\"\r\n                autoCompleteType=\"email\"\r\n                textContentType=\"emailAddress\"\r\n                keyboardType=\"email-address\"\r\n            />\r\n            <TextInput\r\n                label=\"Password\"\r\n                returnKeyType=\"done\"\r\n                value={password.value}\r\n                onChangeText={(text) => setPassword({ value: text, error: '' })}\r\n                error={!!password.error}\r\n                errorText={password.error}\r\n                secureTextEntry\r\n            />\r\n            <View style={styles.forgotPassword}>\r\n                <TouchableOpacity\r\n                    onPress={() => navigation.navigate('ForgotPasswordScreen')}\r\n                >\r\n                    <Text style={styles.forgot}>Forgot your password?</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <Button mode=\"contained\" onPress={onLoginPressed}>\r\n                Login\r\n      </Button>\r\n            <View style={styles.row}>\r\n                <Text>Don’t have an account? </Text>\r\n                <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\r\n                    <Text style={styles.link}>Sign up</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </Background>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    forgotPassword: {\r\n        width: '100%',\r\n        alignItems: 'flex-end',\r\n        marginBottom: 24,\r\n    },\r\n    row: {\r\n        flexDirection: 'row',\r\n        marginTop: 4,\r\n    },\r\n    forgot: {\r\n        fontSize: 13,\r\n        color: Theme.colors.secondary,\r\n    },\r\n    link: {\r\n        fontWeight: 'bold',\r\n        color: Theme.colors.primary,\r\n    },\r\n})\r\n\r\nexport default LoginView"]},"metadata":{},"sourceType":"module"}